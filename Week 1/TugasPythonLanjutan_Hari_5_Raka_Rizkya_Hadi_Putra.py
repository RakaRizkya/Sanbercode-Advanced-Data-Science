# -*- coding: utf-8 -*-
"""TugasPythonLanjutan_Hari_4_Raka_Rizkya_Hadi_Putra.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PTNZ57S4r_2L4VzhfVvi68DHsjB8g-PD
"""

# Import library yang dibutuhkan
from urllib.request import urlopen, Request
from bs4 import BeautifulSoup
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
import numpy as np
from sklearn.metrics import silhouette_score

# Mengakses halaman dengan tambahan header
alamat = "https://pokemondb.net/pokedex/all"
safeAdd = Request(alamat, headers={'User-Agent': 'Mozilla/5.0'})
html = urlopen(safeAdd)
data = BeautifulSoup(html, 'html.parser')

# Mencari tabel dan baris pada halaman web
table = data.find("table", {"id":"pokedex"})
rows = data.findAll("tr", limit=985)

# Membuat nested list untuk setiap baris pada tabel
hasil = []
for row in rows:
    info = []
    for item in row.findAll(["th", "td"]):
        info.append(item.get_text())
    hasil.append(info)

# Mengubah list menjadi dataframe
df = pd.DataFrame(hasil[1:],columns=hasil[0])
df

# Mengambil kolom yang ingin dibuat cluster
df_new = df[['Attack', 'Defense']]
# Mengubah tipe data pada kolom attack dan defense
df_new = df_new[['Attack', 'Defense']].astype('int32')

# Membuat model clustering
kmeans = KMeans(n_clusters=3)
kmeans.fit(df_new)

# Menambahkan kolom "kluster" dalam data frame ritel
df_new["kluster"] = kmeans.labels_
df_new.head()

color_map_dict = {0:'r', 1:'g', 2:'b'}
label_color = [color_map_dict[l] for l in df_new.kluster]

# Membuat visualisasi hasil klustering
fig, ax = plt.subplots(figsize=(16,8))
ax.scatter(df_new['Attack'], df_new['Defense'], c = label_color, alpha = 0.5)
plt.title("Hasil Klustering K-Means")
plt.xlabel("Atk")
plt.ylabel("Def")
plt.show()

"""Scatter plot dengan 3 kluster menunjukkan hasil yang cukup baik dimana pokemon bisa dikelompokkan menjadi 3 kelompok
yakni Pokemon lemah, pokemon dengan attack tinggi, dan pokemon dengan defense tinggi. Namun apakah jumlah kluster sebanyak 3 kluster
menjadi nilai kluster yang optimal? Hal ini akan dicari tahu lebih lanjut dengan menggunakan elbow method"""

# Menghitung distorsi untuk jumlah cluster 1 sampai 10
df_test = df[['Attack','Defense']].astype('int32')
distortions = []
K = range(1,10)
for k in K:
  kmeanModel = KMeans(n_clusters=k)
  kmeanModel.fit(df_test)
  distortions.append(kmeanModel.inertia_)

# Membuat plot untuk menentukan elbow
plt.figure(figsize=(16,8))
plt.plot(K, distortions, 'bx-')
plt.xlabel('k')
plt.ylabel('Distorsi')
plt.title('Metode Elbow untuk Menentukan Jumlah k Optimal')
plt.show()

"""Elbow method menunjukkan nilai yang cukup rancu antara 2 atau 3, karena itu pencarian nilai yang optimal dilanjutkan dengan
metode silhouette score"""

# Mencari nilai silhouette score untuk jumlah cluster 2 sampai 10 
silhouette = []
K = range(2,10)
for k in K:
  kmeanModel = KMeans(n_clusters=k)
  kmeanModel.fit(df_test)
  label = kmeanModel.predict(df_test)
  silhouette.append(silhouette_score(df_test, label))

# Membuat plot dengan silhouette cluster
plt.figure(figsize=(16,8))
plt.plot(K, silhouette, 'bx-')
plt.xlabel('k')
plt.ylabel('Silhouette Score')
plt.title('Metode Silhouette Score untuk Menentukan Jumlah k Optimal')
plt.show()

"""Dengan metode silhouette score, barulah dapat ditentukan dengan pasti bahwa jumlah kluster yang optimal sebenarnya adalah 2, dimana
pokemon kemungkinan bisa dikelompokkan menjadi pokemon lemah dan pokemon kuat."""